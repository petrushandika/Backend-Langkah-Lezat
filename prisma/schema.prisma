generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  username String
  phone    String?
  email    String  @unique
  password String

  roleId Int?
  role   Role? @relation(fields: [roleId], references: [id])

  profile Profile?
  orders  Order[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  Location  Location?
}

model Role {
  id   Int      @id @default(autoincrement())
  name RoleType @unique

  users User[]
}

model Profile {
  id    Int     @id @default(autoincrement())
  image String?

  user   User? @relation(fields: [userId], references: [id])
  userId Int?  @unique

  location Location[]
}

model Location {
  id           Int    @id @default(autoincrement())
  name         String
  address      String
  postalCode   Int
  cityDistrict String

  user   User? @relation(fields: [userId], references: [id])
  userId Int?  @unique

  profile   Profile? @relation(fields: [profileId], references: [id])
  profileId Int?
}

model Menu {
  id         Int     @id @default(autoincrement())
  name       String
  price      Float
  offerPrice Float?
  image      String?

  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])

  orderDetails OrderDetail[]
}

model Category {
  id    Int           @id @default(autoincrement())
  name  String
  image String?
  type  CategoryType?

  menu Menu[]
}

model Order {
  id     Int          @id @default(autoincrement())
  status OrderStatus?

  userId Int
  user   User @relation(fields: [userId], references: [id])

  orderDetail OrderDetail[]
}

model OrderDetail {
  id       Int   @id @default(autoincrement())
  price    Float // subtotal (quantity x menu.price)
  quantity Int

  orderId Int
  order   Order @relation(fields: [orderId], references: [id])
  menuId  Int
  menu    Menu  @relation(fields: [menuId], references: [id])
}

enum RoleType {
  ADMIN
  CASHIER
  CUSTOMER
}

enum CategoryType {
  Snacks
  Chinese
  North_Indian
  Special_Meals
  Main_Course
  Bread
  Dessert
}

enum OrderStatus {
  Order_Dispatched
  Order_Preparing
  On_The_Way
  Order_Delivered
}
